import { ImageProcessingResult } from "./interfaces.js";
import { BaseImageModel } from "./base.js";
/**
 * Output of the image-to-image model.
 *
 * @param data - array buffer with the resulting image.
 */
export type Img2ImgResult = ImageProcessingResult & {
    data: ImageData;
};
/**
 * Model for generating images from images.
 *
 * @implements IImageModel
 *
 * @remarks
 * The model is initialized via `init()` function. The model cannot be used if it is not initialized.
 *
 * @param metadata - information about the model.
 * @param initialized - flag indicating if the model was initialized.
 */
export declare class Img2ImgModel extends BaseImageModel {
    /**
     * Processes the image and generates the image from the input.
     *
     * @param input - either URL to the image or Buffer with the image.
     *
     * @returns generated image.
     */
    process: (input: string | ArrayBuffer, resize?: number) => Promise<Img2ImgResult>;
    private prepareImage;
    private runInference;
}
