/**
 * Configuration for the image model.
 *
 * @param classes - map where keys are class IDs and values are class names.
 * @param colors - map where keys are class IDs and values are class colors.
 *
 * @remarks
 * If the colors are not present in the config file, they will be randomly
 * populated during the configuration creation.
 */
export declare class Config {
    classes: Map<number, string>;
    colors: Map<number, number[]>;
    constructor();
    /**
     * Reads the configuration from the file.
     *
     * @param configPath - URL to the configuration file.
     *
     * @returns configuration for the image model.
     */
    static fromFile: (configPath: string) => Promise<Config>;
    /**
     * Parses the configuration from the JSON data.
     *
     * @param configData - JSON data read from the configuration file.
     *
     * @returns configuration for the image model.
     */
    static parseConfig: (configData: any) => Config;
    /**
     * Checks the configuration for correctness. Throws an error if the configuration is not valid.
     */
    validate: () => void;
}
export default Config;
